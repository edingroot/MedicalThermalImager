apply plugin: 'com.android.application'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'

    defaultConfig {
        applicationId "tw.cchi.medthimager"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"

        // used by Room, to test migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // used by Room, to test migrations
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())

        // 禁止自带的ndk功能
        main.jni.srcDirs = []
        // 重定向so目录为src/main/libs和src/main/jniLibs，原来为src/main/jniLibs
        main.jniLibs.srcDirs = ['src/main/libs', 'src/main/jniLibs']
    }

    task ndkBuild(type: Exec, description: 'Compile JNI source with NDK') {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')

        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd", '-C', file('src/main/jni').absolutePath
        } else {
            commandLine "$ndkDir/ndk-build", '-C', file('src/main/jni').absolutePath
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    task ndkClean(type: Exec, description: 'Clean NDK Binaries') {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')

        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd", 'clean', '-C', file('src/main/jni').absolutePath
        } else {
            commandLine "$ndkDir/ndk-build", 'clean', '-C', file('src/main/jni').absolutePath
        }
    }

    clean.dependsOn 'ndkClean'

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(name: 'flironesdk', ext: 'aar')

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    compile 'com.droidninja:filepicker:2.1.2'

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Dagger2
    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'

    // RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'

    // RxBinding
    compile 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    compile 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'
    compile 'com.jakewharton.rxbinding2:rxbinding-design:2.1.1'
    compile 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.1.1'

    // PermissionsDispatcher
    compile("com.github.hotchemi:permissionsdispatcher:3.0.1")
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.0.1"

    // Room Database Library
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"
}

repositories {
    flatDir {
        dirs 'libs'
    }
}
